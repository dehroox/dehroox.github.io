---
const profile = {
  name: "Dehroo",
  title: "my little webpage",
  avatar: "https://github.com/dehroox.png",
  socials: [
    { name: "GitHub", url: "https://github.com/dehroox", icon: "/octocat.png" },
  ],
};

import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{profile.name} â€“ {profile.title}</title>
  </head>
  <body class="bg-gray-50 min-h-screen flex items-center justify-center">
    <main
      class="bg-white shadow-2xl rounded-xl p-8 max-w-md w-full text-center transition delay-[20] duration-500 ease-in-out hover:scale-125"
      id="draggable"
    >
      <img
        src={profile.avatar}
        alt={profile.name}
        class="w-24 h-24 mx-auto rounded-full mb-4 border-4 border-indigo-200 animate-spin transition delay-[20] duration-500 ease-in-out hover:scale-125"
      />
      <h1 class="text-2xl font-bold text-gray-900">{profile.name}</h1>
      <h2 class="text-indigo-600 font-medium mb-2">{profile.title}</h2>
      <div class="flex justify-center pt-4">
        {
          profile.socials.map((social) => (
            <a
              href={social.url}
              class="text-2xl transition delay-[20] duration-500 ease-in-out hover:scale-125"
              target="_blank"
              rel="noopener noreferrer"
              aria-label={social.name}
            >
              <img
                src={social.icon}
                class="w-8 h-8 mx-auto rounded-full mb-4 border-4 border-indigo-200"
                alt={social.name}
              />
            </a>
          ))
        }
      </div>
    </main>
  </body>
</html>

<script>
  document.querySelectorAll<HTMLElement>("#draggable").forEach((draggable) => {
    draggable.style.position = "absolute";
    let isDragging = false;
    let offsetX = 0, offsetY = 0;

    draggable.addEventListener("mousedown", (e: MouseEvent) => {
      isDragging = true;
      offsetX = e.clientX - draggable.getBoundingClientRect().left;
      offsetY = e.clientY - draggable.getBoundingClientRect().top;
      draggable.style.zIndex = "9999";
    });

    document.addEventListener("mousemove", (e: MouseEvent) => {
      if (isDragging) {
        draggable.style.left = `${e.clientX - offsetX}px`;
        draggable.style.top = `${e.clientY - offsetY}px`;
      }
    });

    document.addEventListener("mouseup", () => {
      if (isDragging) {
        isDragging = false;
        draggable.style.zIndex = "";
      }
    });
  });
</script>